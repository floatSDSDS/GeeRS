shiny::runApp('GudetamaYelpRecommender')
runApp('GudetamaYelpRecommender')
library(shiny)
library(leaflet)
library(data.table)
library(dplyr)
runApp('GudetamaYelpRecommender')
business<-as.data.frame("data/businessSelected.csv",header=T)
user<-as.data.frame("data/USample.csv",header=T)
business<-as.data.frame("data/businessSelected.csv",header=T)
View(business)
runApp('GudetamaYelpRecommender')
runApp('GudetamaYelpRecommender')
business<-as.data.frame(fread("data/businessSelected.csv"),header=T)
runApp('GudetamaYelpRecommender')
runApp('GudetamaYelpRecommender')
runApp('GudetamaYelpRecommender')
business<-as.data.frame(fread("E:/8sem/thesis/GudetamaYelpRecommender/data/businessSelected.csv"),header=T)
user<-as.data.frame(fread("E:/8sem/thesis/GudetamaYelpRecommender/data/USample.csv"),header=T)
runApp('GudetamaYelpRecommender')
user$review_count[1]
runApp('GudetamaYelpRecommender')
runApp('GudetamaYelpRecommender')
paste("review count:",1)
runApp('GudetamaYelpRecommender')
runApp('GudetamaYelpRecommender')
runApp('GudetamaYelpRecommender')
runApp('GudetamaYelpRecommender')
runApp('GudetamaYelpRecommender')
runApp('GudetamaYelpRecommender')
shiny::runApp('GudetamaYelpRecommender')
business<-as.data.frame(fread("E:/8sem/thesis/GudetamaYelpRecommender/data/businessSelected.csv"),header=T)
require(shiny)
require(leaflet)
require(data.table)
require(dplyr)
business<-as.data.frame(fread("E:/8sem/thesis/GudetamaYelpRecommender/data/businessSelected.csv"),header=T)
user<-as.data.frame(fread("E:/8sem/thesis/GudetamaYelpRecommender/data/USample.csv"),header=T)
runApp('GudetamaYelpRecommender')
require(shiny)
require(leaflet)
require(data.table)
require(dplyr)
usiness<-as.data.frame(fread("E:/8sem/thesis/GudetamaYelpRecommender/data/businessSelected.csv"),header=T)
user<-as.data.frame(fread("E:/8sem/thesis/GudetamaYelpRecommender/data/USample.csv"),header=T)
runApp('GudetamaYelpRecommender')
business<-as.data.frame(fread("E:/8sem/thesis/GudetamaYelpRecommender/data/businessSelected.csv"),header=T)
user<-as.data.frame(fread("E:/8sem/thesis/GudetamaYelpRecommender/data/USample.csv"),header=T)
runApp('GudetamaYelpRecommender')
load("E:/8sem/thesis/src/2 GeoOnlyAZNV/170328ItemCF.RData")
require(shiny)
require(leaflet)
require(data.table)
require(dplyr)
business<-as.data.frame(fread("E:/8sem/thesis/GudetamaYelpRecommender/data/businessSelected.csv"),header=T)
user<-as.data.frame(fread("E:/8sem/thesis/GudetamaYelpRecommender/data/USample.csv"),header=T)
runApp('GudetamaYelpRecommender')
?install.packages
file.edit('~/.Renviron')
?ftp_proxy
?http_proxy
library(parallel)
install.packages("snowfall")
install.packages("ctv")
library("ctv")
tasklist<-c("Cluster","Graphics","MachineLearning",
"HighPerformanceComputing","Spatial","SpatioTemporal"
"TimeSeries")
tasklist<-c("Cluster","Graphics","MachineLearning",
"HighPerformanceComputing","Spatial","SpatioTemporal",
"TimeSeries")
install.views(tasklist[1])
shiny::runApp('RRAPP1')
library(dplyr)
?absolutePanel
runApp('RRAPP1')
?reactive
View(user)
View(business)
subset(brewer.pal.info, category %in% c("seq", "div"))
temp<-subset(brewer.pal.info, category %in% c("seq", "div"))
View(temp)
business<-as.data.frame(fread("data/businessSelected.csv"),header=T)
user<-as.data.frame(fread("data/USample.csv"),header=T)
rownames(subset(brewer.pal.info, category %in% c("seq", "div")))
sampleR<-as.data.frame(fread("data/sampleR170401.csv",header=T))
getwd()
setwd("RRAPP1")
sampleR<-as.data.frame(fread("data/sampleR170401.csv",header=T))
View(sampleR)
names(sampleR)
user_list<-unique(sampleR$user_id)
user_list<-as.data.frame(unique(sampleR$user_id))
class(user_list$`unique(sampleR$user_id)`)
user_list<-as.data.frame(unique(sampleR$user_id),stringsAsFactors = F)
class(user_list$`unique(sampleR$user_id)`)
user_list<-as.data.frame(user_id=unique(sampleR$user_id),stringsAsFactors = F)
names(user_list)<-"user_id"
View(user_list)
View(sampleR)
user_list<-left_join(user_list,sampleR[,1:5])
View(user_list)
user_list<-as.data.frame(unique(sampleR$user_id),stringsAsFactors = F)
names(user_list)<-"user_id"
user_list<-left_join(user_list,unique(sampleR[,1:4]))
View(user_list)
user_list<-as.data.frame(unique(sampleR$user_id),stringsAsFactors = F)
names(user_list)<-"user_id"
user_list<-left_join(user_list,unique(sampleR[,1:5]))
View(user_list)
View(user_list)
?addCircles
View(sampleR)
runApp()
runApp()
gc(reset = T)
runApp()
runApp()
runApp()
leafletProxy("map", data = filteredData()) %>%
clearShapes() %>%
addCircles(radius = 3, weight = 1, color = "#777777",
fill="navy",fillOpacity = 0.7, popup = ~paste(name.y)
)
runApp()
runApp()
View(user_list)
View(sampleR)
runApp()
list(user_list$name.x=user_list$user_id)
runApp()
runApp()
runApp()
length(unique(user_list$name.x))
?selectInput
name_id<-user_list$user_id
names(name_id)<-user_list$name.x
name_id
name_id(Tuan)
name_id["Tuan"]
runApp()
runApp()
list(name_id)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
